PROGRAM = { (CLASS_DIAGRAM | USE_CASE_DIAGRAM | ACTIVITY_DIAGRAM) ~ end_uml }
CLASS_DIAGRAM = { start_class ~ new_line+ ~ (CLASS | INTERFACE)+ ~ LINK* }
USE_CASE_DIAGRAM = { start_use_case ~ new_line+ ~ ACTOR+ ~ CONTEXT+ ~ ACTOR* ~ LINK* }
ACTIVITY_DIAGRAM = {start_activity ~ new_line+ ~ start_state ~ ACTIVITY_BODY}
ACTIVITY_BODY = {(PATH ~ new_line)+ ~ new_line?}
PATH = {(ACTIVITY | IF)+ ~ (solid_arrow ~ end_state)?}
ACTIVITY = {solid_arrow ~ (label | identifier) ~ (colon ~ (label | identifier))? ~ new_line?}
IF = {IF_STATEMENT ~ WHITE_SPACE? ~ ELSE_STATEMENT ~ new_line?}
IF_STATEMENT = {if_kw ~ WHITESPACE? ~ identifier ~ WHITESPACE? ~ left_bracket ~ new_line ~ PATH ~ new_line? ~ right_bracket ~ WHITESPACE?}
ELSE_STATEMENT = {else_kw ~ WHITESPACE? ~ left_bracket ~ new_line ~ PATH ~ new_line? ~ right_bracket}
ACTOR = { WHITESPACE? ~ actor_kw ~ (ALIAS | label) ~ new_line+ }
CONTEXT = { WHITESPACE? ~ context_kw ~ label ~ left_bracket ~ new_line ~ USE_CASE_LIST ~ right_bracket ~ new_line+ }
USE_CASE_LIST = { USE_CASE+ }
USE_CASE = { WHITESPACE? ~ use_case_kw ~ (ALIAS | label) ~ new_line }
LINK = { identifier ~ (solid_arrow | solid_line | dashed_arrow | dashed_line) ~ identifier ~ (colon ~ label ~ (left_arrow | right_arrow)?)? ~ new_line+ }
INTERFACE = { WHITESPACE? ~ interface_kw ~ label ~ BODY }
CLASS = { WHITESPACE? ~ class_kw ~ label ~ BODY }
BODY = { WHITESPACE? ~ left_bracket ~ new_line ~ ((ATTRIBUTES ~ METHODS) | ATTRIBUTES | METHODS) ~ right_bracket ~ new_line+ }
METHODS = { WHITESPACE? ~ methods_kw ~ left_bracket ~ new_line ~ COMPONENT_LIST ~ right_bracket ~ new_line+ }
ATTRIBUTES = { WHITESPACE? ~ attributes_kw ~ left_bracket ~ new_line ~ COMPONENT_LIST ~ right_bracket ~ new_line+ }
COMPONENT_LIST = { COMPONENT+ }
COMPONENT = { WHITESPACE? ~ (public | protected | private) ~ identifier ~ (colon ~ identifier)? ~ new_line }
ALIAS = { label ~ alias_kw ~ identifier }

WHITESPACE = _{ (" " | "\t")+ } // Pest special rule
COMMENT = _{ start_comment ~ text } // Pest special rule

start_use_case = { "@startuml usecase" }
start_class = { "@startuml class" }
start_activity = {"@startuml activity"}
end_uml = { "@enduml" }
start_comment = { "//" }
text = { (' '..'~')* }
identifier = @{ ('a'..'z' | 'A'..'Z') ~ ( "_" | 'a'..'z' | 'A'..'Z' | '0'..'9' )* }
label = @{ ( "\"" ~ ( "_" | "-" | 'a'..'z' | 'A'..'Z' | '0'..'9' ) ~ (" " |  "_" | "-" | 'a'..'z' | 'A'..'Z' | '0'..'9' )* ~ "\"" ) | ( "_" | "-" | 'a'..'z' | 'A'..'Z' | '0'..'9' )+}
class_kw = _{ "class" }
left_bracket = _{ "{" }
right_bracket = _{ "}" }
attributes_kw = _{ "attributes" }
private = { "-" }
public = { "+" }
protected = { "#" }
methods_kw = _{ "methods" }
interface_kw = _{ "interface" }
solid_line = { "--" }
solid_arrow = { "-->" }
dashed_line = { ".." }
dashed_arrow = { "..>" }
context_kw = { "context" }
use_case_kw = { "usecase" }
actor_kw = { "actor" }
alias_kw = { "as" }
left_arrow = { "<" }
right_arrow = { ">" }
colon = { ":" }
new_line = _{ "\n" | "\r\n" | "\r" }
start_state = {"(*)"}
end_state = {"(^)"}
if_kw = {"if"}
else_kw = {"else"}
